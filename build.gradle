allprojects {
	group = 'io.spring.ge'	
}

subprojects {
	plugins.withType(JavaPlugin) {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8	
		dependencies {
			testImplementation("org.assertj:assertj-core:3.11.1")
			testImplementation("org.junit.jupiter:junit-jupiter:5.6.0")
			testImplementation("org.mockito:mockito-core:3.2.4")
		}
		tasks.withType(Test).all {
			useJUnitPlatform()
		}
	}
	plugins.withType(CheckstylePlugin) {
		dependencies {
			checkstyle("io.spring.javaformat:spring-javaformat-checkstyle:${javaFormatVersion}")	
		}
		checkstyle {
			def archive = configurations.checkstyle.filter { it.name.startsWith("spring-javaformat-checkstyle")}
			config = resources.text.fromArchiveEntry(archive, "io/spring/javaformat/checkstyle/checkstyle.xml")
			toolVersion = 8.28
		}
	}
	plugins.withType(MavenPublishPlugin) {
		tasks.withType(GenerateModuleMetadata).all {
			enabled = false
		}
		if (project.hasProperty("distributionRepository")) {
			publishing {
				repositories {
					maven {
						url = "${distributionRepository}"
						name = "deployment"
					}
				}
			}
		}
		publishing {
			publications {
				withType(MavenPublication) { mavenPublication -> 
					pom {
						name = "${project.group}:${project.name}"
						description = project.description
                		url = 'https://github.com/spring-io/gradle-enterprise-conventions'
                		organization {
                    		name = 'Pivotal Software, Inc.'
                    		url = 'https://spring.io'
                		}
                		licenses {
                    		license {
                        		name = 'The Apache Software License, Version 2.0'
                        		url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    		}
                		}
                		scm {
                    		url = 'https://github.com/spring-io/gradle-enterprise-conventions'
                    		connection = 'scm:git:https://github.com/spring-io/gradle-enterprise-conventions'
                		}
                		developers {
                    		developer {
                        		id = 'wilkinsona'
                        		name = 'Andy Wilkinson'
                        		email = 'awilkinson@pivotal.io'
                        		roles = ["Project lead"]
                        	}
                    	}
                	}
				}
			}
		}
	}
}
