resource_types:
- name: artifactory-resource
  type: registry-image
  source:
    repository: springio/artifactory-resource
    tag: 0.0.17
- name: github-release
  type: registry-image
  source:
    repository: concourse/github-release-resource
    tag: 1.7.2
resources:
- name: git-repo
  type: git
  source:
    uri: ((github-repo))
    username: ((github-username))
    password: ((github-password))
    branch: ((branch))
    ignore_paths: ["ci/image/*"]
- name: github-release
  type: github-release
  source:
    owner: spring-io
    repository: gradle-enterprise-conventions
    access_token: ((github-ci-release-token))
    pre_release: false
- name: ci-image-git-repo
  type: git
  source:
    uri: ((github-repo))
    branch: ((branch))
    paths: ["ci/image/*"]
- name: ci-image
  type: registry-image
  source:
    repository: ((docker-hub-organization))/gradle-enterprise-conventions-ci-image
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: ((branch))
- name: artifactory-repo
  type: artifactory-resource
  source:
    uri: ((artifactory-server))
    username: ((artifactory-username))
    password: ((artifactory-password))
    build_name: ((build-name))
jobs:
- name: build-ci-image
  plan:
  - get: git-repo
  - get: ci-image-git-repo
    trigger: true
  - do:
    - task: build-ci-image
      privileged: true
      file: git-repo/ci/tasks/build-ci-image.yml
      output_mapping:
        image: ci-image
  - put: ci-image
    params:
      image: ci-image/image.tar
- name: build
  serial: true
  public: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: true
  - do:
    - task: build-project
      privileged: true
      timeout: 1h30m
      image: ci-image
      file: git-repo/ci/tasks/build-project.yml
  - put: artifactory-repo
    params: &artifactory-params
      signing_key: ((signing-key))
      signing_passphrase: ((signing-passphrase))
      repo: libs-snapshot-local
      build_number: "${BUILD_ID}"
      folder: distribution-repository
      build_uri: "https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
      build_number: "${BUILD_PIPELINE_NAME}-${BUILD_JOB_NAME}-${BUILD_NAME}"
      disable_checksum_uploads: true
- name: stage-release
  serial: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: false
  - task: stage
    image: ci-image
    file: git-repo/ci/tasks/stage.yml
    params:
      RELEASE_TYPE: RELEASE
  - put: artifactory-repo
    params:
      <<: *artifactory-params
      repo: libs-staging-local
  - put: git-repo
    params:
      repository: stage-git-repo
- name: promote-release
  serial: true
  plan:
  - get: git-repo
    trigger: false
  - get: artifactory-repo
    trigger: false
    passed: [stage-release]
    params:
      download_artifacts: true
      save_build_info: true
  - task: promote
    file: git-repo/ci/tasks/promote.yml
    params:
      RELEASE_TYPE: RELEASE
      ARTIFACTORY_SERVER: ((artifactory-server))
      ARTIFACTORY_USERNAME: ((artifactory-username))
      ARTIFACTORY_PASSWORD: ((artifactory-password))
      SONATYPE_USERNAME: ((s01-user-token))
      SONATYPE_PASSWORD: ((s01-user-token-password))
      SONATYPE_URL: ((sonatype-url))
      SONATYPE_STAGING_PROFILE_ID: ((sonatype-staging-profile-id))
  - task: generate-changelog
    file: git-repo/ci/tasks/generate-changelog.yml
    params:
      RELEASE_TYPE: RELEASE
      GITHUB_USERNAME: ((github-username))
      GITHUB_TOKEN: ((github-ci-release-token))
  - put: github-release
    params:
      name: generated-changelog/tag
      tag: generated-changelog/tag
      body: generated-changelog/changelog.md
groups:
- name: "build"
  jobs: ["build"]
- name: "release"
  jobs: ["stage-release", "promote-release"]
- name: "ci-image"
  jobs: ["build-ci-image"]
